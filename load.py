from .kb import KB, Boolean, Integer

# Initialise all variables that you need for you strategies and game knowledge.
# Add those variables here.. The following list is complete for the Play Jack strategy.
J0 = Boolean('j0')
J1 = Boolean('j1')
J2 = Boolean('j2')
J3 = Boolean('j3')
J4 = Boolean('j4')
J5 = Boolean('j5')
J6 = Boolean('j6')
J7 = Boolean('j7')
J8 = Boolean('j8')
J9 = Boolean('j9')
J10 = Boolean('j10')
J11 = Boolean('j11')
J12 = Boolean('j12')
J13 = Boolean('j13')
J14 = Boolean('j14')
J15 = Boolean('j15')
J16 = Boolean('j16')
J17 = Boolean('j17')
J18 = Boolean('j18')
J19 = Boolean('j19')
PJ0 = Boolean('pj0')
PJ1 = Boolean('pj1')
PJ2 = Boolean('pj2')
PJ3 = Boolean('pj3')
PJ4 = Boolean('pj4')
PJ5 = Boolean('pj5')
PJ6 = Boolean('pj6')
PJ7 = Boolean('pj7')
PJ8 = Boolean('pj8')
PJ9 = Boolean('pj9')
PJ10 = Boolean('pj10')
PJ11 = Boolean('pj11')
PJ12 = Boolean('pj12')
PJ13 = Boolean('pj13')
PJ14 = Boolean('pj14')
PJ15 = Boolean('pj15')
PJ16 = Boolean('pj16')
PJ17 = Boolean('pj17')
PJ18 = Boolean('pj18')
PJ19 = Boolean('pj19')

#PlayQueen strategy
Q0 = Boolean('q0')
Q1 = Boolean('q1')
Q2 = Boolean('q2')
Q3 = Boolean('q3')
Q4 = Boolean('q4')
Q5 = Boolean('q5')
Q6 = Boolean('q6')
Q7 = Boolean('q7')
Q8 = Boolean('q8')
Q9 = Boolean('q9')
Q10 = Boolean('q10')
Q11 = Boolean('q11')
Q12 = Boolean('q12')
Q13 = Boolean('q13')
Q14 = Boolean('q14')
Q15 = Boolean('q15')
Q16 = Boolean('q16')
Q17 = Boolean('q17')
Q18 = Boolean('q18')
Q19 = Boolean('q19')
PQ0 = Boolean('pq0')
PQ1 = Boolean('pq1')
PQ2 = Boolean('pq2')
PQ3 = Boolean('pq3')
PQ4 = Boolean('pq4')
PQ5 = Boolean('pq5')
PQ6 = Boolean('pq6')
PQ7 = Boolean('pq7')
PQ8 = Boolean('pq8')
PQ9 = Boolean('pq9')
PQ10 = Boolean('pq10')
PQ11 = Boolean('pq11')
PQ12 = Boolean('pq12')
PQ13 = Boolean('pq13')
PQ14 = Boolean('pq14')
PQ15 = Boolean('pq15')
PQ16 = Boolean('pq16')
PQ17 = Boolean('pq17')
PQ18 = Boolean('pq18')
PQ19 = Boolean('pq19')

#PlayKing strategy
K0 = Boolean('K0')
K1 = Boolean('k1')
K2 = Boolean('K2')
K3 = Boolean('K3')
K4 = Boolean('K4')
K5 = Boolean('K5')
K6 = Boolean('K6')
K7 = Boolean('K7')
K8 = Boolean('K8')
K9 = Boolean('K9')
K10 = Boolean('K10')
K11 = Boolean('K11')
K12 = Boolean('K12')
K13 = Boolean('K13')
K14 = Boolean('K14')
K15 = Boolean('K15')
K16 = Boolean('K16')
K17 = Boolean('K17')
K18 = Boolean('K18')
K19 = Boolean('K19')
PK0 = Boolean('pK0')
PK1 = Boolean('pK1')
PK2 = Boolean('pK2')
PK3 = Boolean('pK3')
PK4 = Boolean('pK4')
PK5 = Boolean('pK5')
PK6 = Boolean('pK6')
PK7 = Boolean('pK7')
PK8 = Boolean('pK8')
PK9 = Boolean('pK9')
PK10 = Boolean('pK10')
PK11 = Boolean('pK11')
PK12 = Boolean('pK12')
PK13 = Boolean('pK13')
PK14 = Boolean('pK14')
PK15 = Boolean('pK15')
PK16 = Boolean('pK16')
PK17 = Boolean('pK17')
PK18 = Boolean('pK18')
PK19 = Boolean('pK19')


def general_information(kb):
    # GENERAL INFORMATION ABOUT THE CARDS
    # This adds information which cards are Jacks
    kb.add_clause(J4)
    kb.add_clause(J9)
    kb.add_clause(J14)
    kb.add_clause(J19)
    kb.add_clause(Q3)
    kb.add_clause(Q8)
    kb.add_clause(Q13)
    kb.add_clause(Q18)
    kb.add_clause(K2)
    kb.add_clause(K7)
    kb.add_clause(K12)
    kb.add_clause(K17)
    # Add here whatever is needed for your strategy.

def strategy_knowledge(kb):
    # DEFINITION OF THE STRATEGY
    # Add clauses (This list is sufficient for this strategy)
    # PJ is the strategy to play jacks first, so all we need to model is all x PJ(x) <-> J(x),
    # In other words that the PJ strategy should play a card when it is a jack
    kb.add_clause(~J4, PJ4)
    kb.add_clause(~J9, PJ9)
    kb.add_clause(~J14, PJ14)
    kb.add_clause(~J19, PJ19)
    kb.add_clause(~PJ4, J4)
    kb.add_clause(~PJ9, J9)
    kb.add_clause(~PJ14, J14)
    kb.add_clause(~PJ19, J19)
    kb.add_clause(~Q3, PQ3)
    kb.add_clause(~Q8, PQ8)
    kb.add_clause(~Q13, PQ13)
    kb.add_clause(~Q18, PQ18)
    kb.add_clause(~K2, PK2)
    kb.add_clause(~K7, PK7)
    kb.add_clause(~K12, PK12)
    kb.add_clause(~K17, PK17)
